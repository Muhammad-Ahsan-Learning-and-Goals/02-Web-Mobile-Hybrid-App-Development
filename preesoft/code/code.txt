import React, { useState } from "react";
import "./App.css";

const App = () => {
  const [items, setItems] = useState([
    { id: 1, name: "Burger", price: 50, isChecked: false, quantity: 0 },
    { id: 2, name: "Pizza", price: 750, isChecked: false, quantity: 0 },
    { id: 3, name: "Fries", price: 50, isChecked: false, quantity: 0 },
    { id: 4, name: "Sprite", price: 120, isChecked: false, quantity: 0 },
  ]);

  const [totalPrice, setTotalPrice] = useState(1);

  const handleCheckbox = (id) => {
    const updatedItems = items.map((item) =>
      item.id === id ? { ...item, isChecked: !item.isChecked } : item
    );

    setItems(updatedItems);
    const selectedItems = updatedItems.filter((item) => item.isChecked);
    const selectedTotalPrice = selectedItems.reduce(
      (total, item) => total + item.price * item.quantity,
      0
    );

    setTotalPrice(selectedTotalPrice);
  };

  const handleQuantityChange = (id, value) => {
    const updatedItems = items.map((item) =>
      item.id === id ? { ...item, quantity: item.quantity + value } : item
    );
    setItems(updatedItems);
    const selectedItems = updatedItems.filter((item) => item.isChecked);
    const selectedTotalPrice = selectedItems.reduce(
      (total, item) => total + item.price * item.quantity,
      0
    );
    setTotalPrice(selectedTotalPrice);
  };

  return (
    <div>
      <div className="head">
        <h3>Food Menu</h3>
      </div>
      <div>
        <h3>Item Name - Price - Quantity</h3>
      </div>
      <ul>

        {items.map((item) => (
          <li key={item.id}>
            <input
              type="checkbox"
              checked={item.isChecked}
              onChange={() => handleCheckbox(item.id)}
            />
            {item.name} = RS {item.price} /= {" "}
            <button onClick={() => handleQuantityChange(item.id, -1)}>
              <h2> - </h2>
            </button>
            {item.quantity}
            <button onClick={() => handleQuantityChange(item.id, 1)}>
              {" "}
              <h2> + </h2>
            </button>
          </li>
        ))}
      </ul>
      {totalPrice > 0 && (
        <p className="head2">
          Total Price in Pakistani Ruppies : {totalPrice} (
          {items
            .filter((item) => item.isChecked)
            .map((item) => item.name)
            .join(", ")}
          )
        </p>
      )}
    </div>
  );
};

export default App;


ðŸ˜€ðŸ˜€ðŸ˜€ðŸ˜€ðŸ˜€ðŸ˜€ðŸ˜€ðŸ˜€



import React, { useState } from "react";
import "./App.css";

const App = () => {
  const [items, setItems] = useState([
    { id: 1, name: "Burger", price: 50, isChecked: false, quantity: 0 },
    { id: 2, name: "Pizza", price: 750, isChecked: false, quantity: 0 },
    { id: 3, name: "Fries", price: 50, isChecked: false, quantity: 0 },
    { id: 4, name: "Sprite", price: 120, isChecked: false, quantity: 0 },
  ]);
  
  // ðŸ˜€ðŸ˜€ðŸ˜€ Add new Code 

  const addprice = () => {
    const selectedItems = items.filter((item) => item.isChecked);
    const selectedTotalPrice = selectedItems.reduce(
      (total, item) => total + item.price * item.quantity,
      0
    );
    setTotalPrice(selectedTotalPrice);
  };

  const [totalPrice, setTotalPrice] = useState();

  const handleCheckbox = (id) => {
    const updatedItems = items.map((item) =>
      item.id === id ? { ...item, isChecked: !item.isChecked } : item
    );

    setItems(updatedItems);
    const selectedItems = updatedItems.filter((item) => item.isChecked);
    const selectedTotalPrice = selectedItems.reduce(
      (total, item) => total + item.price * item.quantity,
      0
    );

    setTotalPrice(selectedTotalPrice);
  };

  const handleQuantityChange = (id, value) => {
    const updatedItems = items.map((item) =>
      item.id === id ? { ...item, quantity: item.quantity + value } : item
    );
    setItems(updatedItems);
    const selectedItems = updatedItems.filter((item) => item.isChecked);
    const selectedTotalPrice = selectedItems.reduce(
      (total, item) => total + item.price * item.quantity,
      0
    );
    setTotalPrice(selectedTotalPrice);
  };

  const handleTotalPrice = () => {
    const selectedItems = items.filter((item) => item.isChecked);
    const selectedTotalPrice = selectedItems.reduce(
      (total, item) => total + item.price * item.quantity,
      0
    );

    setTotalPrice(selectedTotalPrice);
  };

  return (
    <div>
      <div className="head">
        <h3>Food Menu</h3>
      </div>
      <div>
        <h3>Item Name - Price - Quantity</h3>
      </div>
      <ul>
        {items.map((item) => (
          <li key={item.id}>
            <input
              type="checkbox"
              checked={item.isChecked}
              onChange={() => handleCheckbox(item.id)}
            />
            {item.name} = RS {item.price} /={" "}
            <button onClick={() => handleQuantityChange(item.id, -1)}>
              <h2> - </h2>
            </button>
            {item.quantity}
            <button onClick={() => handleQuantityChange(item.id, 1)}>
              <h2> + </h2>
            </button>
            
            <button onClick={addprice}>Add Price</button>
          </li>
        ))}
      </ul>

      {totalPrice > 0 && (
        <p className="head2">
          Total Price in Pakistani Ruppies : {totalPrice} (
          {items
            .filter((item) => item.isChecked)
            .map((item) => item.name)
            .join(", ")}
          )
        </p>
      )}
    </div>
  );
};

export default App;
